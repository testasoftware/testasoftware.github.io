{
    "componentChunkName": "component---src-pages-blog-markdown-remark-frontmatter-slug-tsx",
    "path": "/blog/2013-10-08-generating-csharp-classes-from-an-xml-file/",
    "result": {"data":{"markdownRemark":{"html":"<p>Update: Visual Studio has this functionality baked in! <code class=\"language-text\">Edit -> Paste Special</code></p>\n<strike>\nI frequently come to the conclusion that I'm working too hard. This is usually because I try to reinvent the wheel when some<!--more-->one \nout there has already done the job better than I could have. Recently, I had a need to create some strongly typed C# models to help with \nde-serializing some XML. For simple XML it's easy enough to create these models/classes by hand. For more complex XML it's often easier to \nuse the XML Schema Definition tool.\n<p>The XML Schema Definition tool is packaged into the Windows SDK. This means I've had this tool on my machine for practically forever and\nhave been doing things the hard way for a long time.</p>\n<p>Your path to xsd.exe will look something like this depending on which version of the Windows SDK you have installed.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\&amp;lt;version&amp;gt;\\Bin\\NETFX 4.0 Tools\\xsd.exe</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>It's a two step process to convert an XML file to a corresponding set of C# classes: create an XSD from your XML and then create your\nC# classes from that XSD...</p>\n<h3>XML to XSD</h3>\n<p>The following will output &#x3C;filename>.xsd</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">xsd.exe &amp;lt;filename&amp;gt;.xml</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>XSD to C# Classes</h3>\n<p>The following will output your csharp classes to a single file &#x3C;filename>.cs - Note the '/l:cs' switch can be changed to '/l:vb'\nto output VB instead of C#</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">xsd.exe /c /l:cs file.xsd</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>And that's it! You should now have an auto-generated C# model. By default this file will be placed into the same directory as the xsd\nexecutable. You can also specify the **'-out:&#x3C;directoryName>'**in order to change the location that your files\nget saved.\n</strike></p>","frontmatter":{"date":"October 08, 2013","slug":"2013-10-08-generating-csharp-classes-from-an-xml-file","title":"Generating C# Classes from an XML File","image":"/assets/images/blog/thumbnails/code2.jpg"}}},"pageContext":{"id":"c50917d4-2558-54dd-8eef-e3bb229f1e84","frontmatter__slug":"2013-10-08-generating-csharp-classes-from-an-xml-file","__params":{"frontmatter__slug":"2013-10-08-generating-csharp-classes-from-an-xml-file"}}},
    "staticQueryHashes": ["63159454"]}